{"ast":null,"code":"\"use client\";\n\n// Ensures this component runs on the client side\nvar _jsxFileName = \"C:\\\\udit\\\\bsc-payment-gateway\\\\src\\\\components\\\\PaymentGateway.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAYMENT_ADDRESS = \"0x09A0C44E5f206b3220C70b4b0236fBC5e01f2AA1\";\nconst USDT_ADDRESS = \"0x55d398326f99059fF77548524699902783197955\"; // USDT on BSC\nconst USDC_ADDRESS = \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"; // USDC on BSC\nconst TOKEN_ABI = [\"function transfer(address recipient, uint256 amount) public returns (bool)\", \"function balanceOf(address account) public view returns (uint256)\"];\nexport default function PaymentGateway() {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const [token, setToken] = useState(\"USDT\");\n  const [loading, setLoading] = useState(false);\n  async function handlePayment() {\n    if (!window.ethereum) {\n      alert(\"Please install MetaMask to proceed!\");\n      return;\n    }\n    try {\n      setLoading(true);\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const tokenAddress = token === \"USDT\" ? USDT_ADDRESS : USDC_ADDRESS;\n      const contract = new ethers.Contract(tokenAddress, TOKEN_ABI, signer);\n\n      // Convert amount to wei\n      const decimals = 18; // USDT & USDC have 18 decimals on BSC\n      const amountInWei = ethers.parseUnits(amount, decimals);\n\n      // Check user balance\n      const userBalance = await contract.balanceOf(await signer.getAddress());\n      if (userBalance < amountInWei) {\n        alert(\"Payment failed: Insufficient balance!\");\n        setLoading(false);\n        return;\n      }\n\n      // Send payment\n      const tx = await contract.transfer(PAYMENT_ADDRESS, amountInWei);\n      await tx.wait();\n      alert(\"Payment Successful!\");\n    } catch (error) {\n      if (error.reason && error.reason.includes(\"transfer amount exceeds balance\")) {\n        alert(\"Payment failed: Insufficient balance!\");\n      } else {\n        alert(`Payment failed: ${error.reason || error.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crypto Payment Gateway\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: token,\n      onChange: e => setToken(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"USDT\",\n        children: \"USDT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"USDC\",\n        children: \"USDC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      style: {\n        margin: \"10px\",\n        padding: \"5px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      disabled: loading,\n      children: loading ? \"Processing...\" : \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n}\n_s(PaymentGateway, \"aefx1aqf5II/dhs2q2MA4QBP26A=\");\n_c = PaymentGateway;\nvar _c;\n$RefreshReg$(_c, \"PaymentGateway\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","ethers","jsxDEV","_jsxDEV","PAYMENT_ADDRESS","USDT_ADDRESS","USDC_ADDRESS","TOKEN_ABI","PaymentGateway","amount","setAmount","token","setToken","loading","setLoading","handlePayment","window","ethereum","alert","provider","BrowserProvider","signer","getSigner","tokenAddress","contract","Contract","decimals","amountInWei","parseUnits","userBalance","balanceOf","getAddress","tx","transfer","wait","error","reason","includes","message","style","textAlign","padding","children","fileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","margin","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/udit/bsc-payment-gateway/src/components/PaymentGateway.js"],"sourcesContent":["\"use client\"; // Ensures this component runs on the client side\r\n\r\nimport { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\n\r\nconst PAYMENT_ADDRESS = \"0x09A0C44E5f206b3220C70b4b0236fBC5e01f2AA1\";\r\nconst USDT_ADDRESS = \"0x55d398326f99059fF77548524699902783197955\"; // USDT on BSC\r\nconst USDC_ADDRESS = \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"; // USDC on BSC\r\nconst TOKEN_ABI = [\r\n\t\"function transfer(address recipient, uint256 amount) public returns (bool)\",\r\n\t\"function balanceOf(address account) public view returns (uint256)\",\r\n];\r\n\r\nexport default function PaymentGateway() {\r\n\tconst [amount, setAmount] = useState(\"\");\r\n\tconst [token, setToken] = useState(\"USDT\");\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tasync function handlePayment() {\r\n\t\tif (!window.ethereum) {\r\n\t\t\talert(\"Please install MetaMask to proceed!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst provider = new ethers.BrowserProvider(window.ethereum);\r\n\t\t\tconst signer = await provider.getSigner();\r\n\r\n\t\t\tconst tokenAddress = token === \"USDT\" ? USDT_ADDRESS : USDC_ADDRESS;\r\n\t\t\tconst contract = new ethers.Contract(tokenAddress, TOKEN_ABI, signer);\r\n\r\n\t\t\t// Convert amount to wei\r\n\t\t\tconst decimals = 18; // USDT & USDC have 18 decimals on BSC\r\n\t\t\tconst amountInWei = ethers.parseUnits(amount, decimals);\r\n\r\n\t\t\t// Check user balance\r\n\t\t\tconst userBalance = await contract.balanceOf(await signer.getAddress());\r\n\r\n\t\t\tif (userBalance < amountInWei) {\r\n\t\t\t\talert(\"Payment failed: Insufficient balance!\");\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Send payment\r\n\t\t\tconst tx = await contract.transfer(PAYMENT_ADDRESS, amountInWei);\r\n\t\t\tawait tx.wait();\r\n\r\n\t\t\talert(\"Payment Successful!\");\r\n\t\t} catch (error) {\r\n\t\t\tif (\r\n\t\t\t\terror.reason &&\r\n\t\t\t\terror.reason.includes(\"transfer amount exceeds balance\")\r\n\t\t\t) {\r\n\t\t\t\talert(\"Payment failed: Insufficient balance!\");\r\n\t\t\t} else {\r\n\t\t\t\talert(`Payment failed: ${error.reason || error.message}`);\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n\t\t\t<h2>Crypto Payment Gateway</h2>\r\n\t\t\t<select value={token} onChange={(e) => setToken(e.target.value)}>\r\n\t\t\t\t<option value=\"USDT\">USDT</option>\r\n\t\t\t\t<option value=\"USDC\">USDC</option>\r\n\t\t\t</select>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tplaceholder=\"Enter Amount\"\r\n\t\t\t\tvalue={amount}\r\n\t\t\t\tonChange={(e) => setAmount(e.target.value)}\r\n\t\t\t\tstyle={{ margin: \"10px\", padding: \"5px\" }}\r\n\t\t\t/>\r\n\t\t\t<button onClick={handlePayment} disabled={loading}>\r\n\t\t\t\t{loading ? \"Processing...\" : \"Pay\"}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ethers } from \"ethers\";\nconst provider = new ethers.BrowserProvider(window.ethereum);\nconst signer = await provider.getSigner();\n\n// BEP20 token contract addresses on BSC\nconst TOKEN_ADDRESSES = {\n  USDT: \"0x55d398326f99059ff775485246999027b3197955\",\n  USDC: \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"\n};\n\n// Recipient wallet address\nconst RECIPIENT = \"0x09A0C44E5f206b3220C70b4b0236fBC5e01f2AA1\";\n\n// BEP20 Token ABI (Minimal)\nconst TOKEN_ABI = [\"function balanceOf(address owner) view returns (uint256)\", \"function allowance(address owner, address spender) view returns (uint256)\", \"function approve(address spender, uint256 amount) returns (bool)\", \"function transfer(address to, uint256 amount) returns (bool)\"];\nasync function payToken(tokenSymbol, amount) {\n  if (!TOKEN_ADDRESSES[tokenSymbol]) {\n    console.error(\"Invalid token selected\");\n    return;\n  }\n  const tokenAddress = TOKEN_ADDRESSES[tokenSymbol];\n  const tokenContract = new ethers.Contract(tokenAddress, TOKEN_ABI, signer);\n  try {\n    const userAddress = await signer.getAddress();\n    const balance = await tokenContract.balanceOf(userAddress);\n    const allowance = await tokenContract.allowance(userAddress, RECIPIENT);\n    const decimals = 18; // USDT & USDC have 18 decimals on BSC\n    const amountInWei = ethers.parseUnits(amount.toString(), decimals);\n    if (balance < amountInWei) {\n      console.error(\"Insufficient balance\");\n      return;\n    }\n    if (allowance < amountInWei) {\n      console.log(\"Approving token transfer...\");\n      const approveTx = await tokenContract.approve(RECIPIENT, amountInWei);\n      await approveTx.wait();\n    }\n    console.log(\"Processing payment...\");\n    const transferTx = await tokenContract.transfer(RECIPIENT, amountInWei);\n    await transferTx.wait();\n    console.log(\"Payment successful!\");\n  } catch (error) {\n    console.error(\"Payment failed:\", error);\n  }\n}\n\n// Example usage:\n// payToken(\"USDT\", \"10\"); // Pay 10 USDT\n// payToken(\"USDC\", \"20\"); // Pay 20 USDC","map":{"version":3,"names":["ethers","provider","BrowserProvider","window","ethereum","signer","getSigner","TOKEN_ADDRESSES","USDT","USDC","RECIPIENT","TOKEN_ABI","payToken","tokenSymbol","amount","console","error","tokenAddress","tokenContract","Contract","userAddress","getAddress","balance","balanceOf","allowance","decimals","amountInWei","parseUnits","toString","log","approveTx","approve","wait","transferTx","transfer"],"sources":["C:/udit/bsc-payment-gateway/src/components/PaymentGateway.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\n\r\nconst provider = new ethers.BrowserProvider(window.ethereum);\r\nconst signer = await provider.getSigner();\r\n\r\n// BEP20 token contract addresses on BSC\r\nconst TOKEN_ADDRESSES = {\r\n\tUSDT: \"0x55d398326f99059ff775485246999027b3197955\",\r\n\tUSDC: \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\",\r\n};\r\n\r\n// Recipient wallet address\r\nconst RECIPIENT = \"0x09A0C44E5f206b3220C70b4b0236fBC5e01f2AA1\";\r\n\r\n// BEP20 Token ABI (Minimal)\r\nconst TOKEN_ABI = [\r\n\t\"function balanceOf(address owner) view returns (uint256)\",\r\n\t\"function allowance(address owner, address spender) view returns (uint256)\",\r\n\t\"function approve(address spender, uint256 amount) returns (bool)\",\r\n\t\"function transfer(address to, uint256 amount) returns (bool)\",\r\n];\r\n\r\nasync function payToken(tokenSymbol, amount) {\r\n\tif (!TOKEN_ADDRESSES[tokenSymbol]) {\r\n\t\tconsole.error(\"Invalid token selected\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst tokenAddress = TOKEN_ADDRESSES[tokenSymbol];\r\n\tconst tokenContract = new ethers.Contract(tokenAddress, TOKEN_ABI, signer);\r\n\r\n\ttry {\r\n\t\tconst userAddress = await signer.getAddress();\r\n\t\tconst balance = await tokenContract.balanceOf(userAddress);\r\n\t\tconst allowance = await tokenContract.allowance(userAddress, RECIPIENT);\r\n\t\tconst decimals = 18; // USDT & USDC have 18 decimals on BSC\r\n\t\tconst amountInWei = ethers.parseUnits(amount.toString(), decimals);\r\n\r\n\t\tif (balance < amountInWei) {\r\n\t\t\tconsole.error(\"Insufficient balance\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (allowance < amountInWei) {\r\n\t\t\tconsole.log(\"Approving token transfer...\");\r\n\t\t\tconst approveTx = await tokenContract.approve(RECIPIENT, amountInWei);\r\n\t\t\tawait approveTx.wait();\r\n\t\t}\r\n\r\n\t\tconsole.log(\"Processing payment...\");\r\n\t\tconst transferTx = await tokenContract.transfer(RECIPIENT, amountInWei);\r\n\t\tawait transferTx.wait();\r\n\r\n\t\tconsole.log(\"Payment successful!\");\r\n\t} catch (error) {\r\n\t\tconsole.error(\"Payment failed:\", error);\r\n\t}\r\n}\r\n\r\n// Example usage:\r\n// payToken(\"USDT\", \"10\"); // Pay 10 USDT\r\n// payToken(\"USDC\", \"20\"); // Pay 20 USDC\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,QAAQ,GAAG,IAAID,MAAM,CAACE,eAAe,CAACC,MAAM,CAACC,QAAQ,CAAC;AAC5D,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,SAAS,CAAC,CAAC;;AAEzC;AACA,MAAMC,eAAe,GAAG;EACvBC,IAAI,EAAE,4CAA4C;EAClDC,IAAI,EAAE;AACP,CAAC;;AAED;AACA,MAAMC,SAAS,GAAG,4CAA4C;;AAE9D;AACA,MAAMC,SAAS,GAAG,CACjB,0DAA0D,EAC1D,2EAA2E,EAC3E,kEAAkE,EAClE,8DAA8D,CAC9D;AAED,eAAeC,QAAQA,CAACC,WAAW,EAAEC,MAAM,EAAE;EAC5C,IAAI,CAACP,eAAe,CAACM,WAAW,CAAC,EAAE;IAClCE,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;IACvC;EACD;EAEA,MAAMC,YAAY,GAAGV,eAAe,CAACM,WAAW,CAAC;EACjD,MAAMK,aAAa,GAAG,IAAIlB,MAAM,CAACmB,QAAQ,CAACF,YAAY,EAAEN,SAAS,EAAEN,MAAM,CAAC;EAE1E,IAAI;IACH,MAAMe,WAAW,GAAG,MAAMf,MAAM,CAACgB,UAAU,CAAC,CAAC;IAC7C,MAAMC,OAAO,GAAG,MAAMJ,aAAa,CAACK,SAAS,CAACH,WAAW,CAAC;IAC1D,MAAMI,SAAS,GAAG,MAAMN,aAAa,CAACM,SAAS,CAACJ,WAAW,EAAEV,SAAS,CAAC;IACvE,MAAMe,QAAQ,GAAG,EAAE,CAAC,CAAC;IACrB,MAAMC,WAAW,GAAG1B,MAAM,CAAC2B,UAAU,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,EAAEH,QAAQ,CAAC;IAElE,IAAIH,OAAO,GAAGI,WAAW,EAAE;MAC1BX,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;MACrC;IACD;IAEA,IAAIQ,SAAS,GAAGE,WAAW,EAAE;MAC5BX,OAAO,CAACc,GAAG,CAAC,6BAA6B,CAAC;MAC1C,MAAMC,SAAS,GAAG,MAAMZ,aAAa,CAACa,OAAO,CAACrB,SAAS,EAAEgB,WAAW,CAAC;MACrE,MAAMI,SAAS,CAACE,IAAI,CAAC,CAAC;IACvB;IAEAjB,OAAO,CAACc,GAAG,CAAC,uBAAuB,CAAC;IACpC,MAAMI,UAAU,GAAG,MAAMf,aAAa,CAACgB,QAAQ,CAACxB,SAAS,EAAEgB,WAAW,CAAC;IACvE,MAAMO,UAAU,CAACD,IAAI,CAAC,CAAC;IAEvBjB,OAAO,CAACc,GAAG,CAAC,qBAAqB,CAAC;EACnC,CAAC,CAAC,OAAOb,KAAK,EAAE;IACfD,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACxC;AACD;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
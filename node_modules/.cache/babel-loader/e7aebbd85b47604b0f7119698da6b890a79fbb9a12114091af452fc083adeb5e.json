{"ast":null,"code":"var _jsxFileName = \"C:\\\\udit\\\\bsc-payment-gateway\\\\src\\\\components\\\\PaymentGateway.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { BrowserProvider, Contract, Wallet, parseUnits } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentGateway = ({\n  contractAddress,\n  abi\n}) => {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const handlePayment = async () => {\n    if (!window.ethereum) {\n      setStatus(\"MetaMask is not installed\");\n      return;\n    }\n    try {\n      setStatus(\"Connecting to wallet...\");\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new Contract(contractAddress, abi, signer);\n      const tx = await contract.deposit({\n        value: parseUnits(amount, \"ether\")\n      });\n      setStatus(\"Transaction sent. Waiting for confirmation...\");\n      await tx.wait();\n      setStatus(\"Payment successful!\");\n    } catch (error) {\n      setStatus(`Payment failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Gateway\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      placeholder: \"Enter amount in ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n_s(PaymentGateway, \"XkiBF+afoBms7WJBj1kD177Gs8U=\");\n_c = PaymentGateway;\nexport default PaymentGateway;\nvar _c;\n$RefreshReg$(_c, \"PaymentGateway\");","map":{"version":3,"names":["useState","BrowserProvider","Contract","Wallet","parseUnits","jsxDEV","_jsxDEV","PaymentGateway","contractAddress","abi","_s","amount","setAmount","status","setStatus","handlePayment","window","ethereum","provider","signer","getSigner","contract","tx","deposit","value","wait","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/udit/bsc-payment-gateway/src/components/PaymentGateway.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { BrowserProvider, Contract, Wallet, parseUnits } from \"ethers\";\r\n\r\nconst PaymentGateway = ({ contractAddress, abi }) => {\r\n\tconst [amount, setAmount] = useState(\"\");\r\n\tconst [status, setStatus] = useState(\"\");\r\n\r\n\tconst handlePayment = async () => {\r\n\t\tif (!window.ethereum) {\r\n\t\t\tsetStatus(\"MetaMask is not installed\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsetStatus(\"Connecting to wallet...\");\r\n\t\t\tconst provider = new BrowserProvider(window.ethereum);\r\n\t\t\tconst signer = await provider.getSigner();\r\n\r\n\t\t\tconst contract = new Contract(contractAddress, abi, signer);\r\n\t\t\tconst tx = await contract.deposit({ value: parseUnits(amount, \"ether\") });\r\n\r\n\t\t\tsetStatus(\"Transaction sent. Waiting for confirmation...\");\r\n\t\t\tawait tx.wait();\r\n\t\t\tsetStatus(\"Payment successful!\");\r\n\t\t} catch (error) {\r\n\t\t\tsetStatus(`Payment failed: ${error.message}`);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Payment Gateway</h2>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={amount}\r\n\t\t\t\tonChange={(e) => setAmount(e.target.value)}\r\n\t\t\t\tplaceholder=\"Enter amount in ETH\"\r\n\t\t\t/>\r\n\t\t\t<button onClick={handlePayment}>Pay</button>\r\n\t\t\t<p>{status}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PaymentGateway;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,eAAe,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,cAAc,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;MACrBH,SAAS,CAAC,2BAA2B,CAAC;MACtC;IACD;IAEA,IAAI;MACHA,SAAS,CAAC,yBAAyB,CAAC;MACpC,MAAMI,QAAQ,GAAG,IAAIjB,eAAe,CAACe,MAAM,CAACC,QAAQ,CAAC;MACrD,MAAME,MAAM,GAAG,MAAMD,QAAQ,CAACE,SAAS,CAAC,CAAC;MAEzC,MAAMC,QAAQ,GAAG,IAAInB,QAAQ,CAACM,eAAe,EAAEC,GAAG,EAAEU,MAAM,CAAC;MAC3D,MAAMG,EAAE,GAAG,MAAMD,QAAQ,CAACE,OAAO,CAAC;QAAEC,KAAK,EAAEpB,UAAU,CAACO,MAAM,EAAE,OAAO;MAAE,CAAC,CAAC;MAEzEG,SAAS,CAAC,+CAA+C,CAAC;MAC1D,MAAMQ,EAAE,CAACG,IAAI,CAAC,CAAC;MACfX,SAAS,CAAC,qBAAqB,CAAC;IACjC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACfZ,SAAS,CAAC,mBAAmBY,KAAK,CAACC,OAAO,EAAE,CAAC;IAC9C;EACD,CAAC;EAED,oBACCrB,OAAA;IAAAsB,QAAA,gBACCtB,OAAA;MAAAsB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB1B,OAAA;MACC2B,IAAI,EAAC,MAAM;MACXT,KAAK,EAAEb,MAAO;MACduB,QAAQ,EAAGC,CAAC,IAAKvB,SAAS,CAACuB,CAAC,CAACC,MAAM,CAACZ,KAAK,CAAE;MAC3Ca,WAAW,EAAC;IAAqB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACF1B,OAAA;MAAQgC,OAAO,EAAEvB,aAAc;MAAAa,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5C1B,OAAA;MAAAsB,QAAA,EAAIf;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAER,CAAC;AAACtB,EAAA,CAvCIH,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\udit\\\\bsc-payment-gateway\\\\src\\\\components\\\\PaymentGateway.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USDT_BEP20_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\"; // USDT on BSC\nconst USDC_BEP20_ADDRESS = \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"; // USDC on BSC\nconst PAYMENT_RECEIVER = \"0x09A0C44E5f206b3220C70b4b0236fBC5e01f2AA1\"; // Replace with your wallet\n\nconst ABI = [\"function balanceOf(address owner) view returns (uint256)\", \"function transfer(address to, uint amount) returns (bool)\", \"function approve(address spender, uint256 amount) returns (bool)\"];\nexport default function PaymentGateway() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [usdtBalance, setUsdtBalance] = useState(\"0\");\n  const [usdcBalance, setUsdcBalance] = useState(\"0\");\n  const [provider, setProvider] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (typeof window !== \"undefined\" && window.ethereum) {\n      try {\n        const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(web3Provider);\n      } catch (error) {\n        console.error(\"Failed to initialize provider\", error);\n      }\n    } else {\n      console.warn(\"MetaMask is not installed\");\n    }\n  }, []);\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"MetaMask not detected! Please install MetaMask.\");\n      return;\n    }\n    try {\n      const web3Provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(web3Provider);\n      const accounts = await web3Provider.send(\"eth_requestAccounts\", []);\n      if (!accounts.length) throw new Error(\"No accounts found\");\n      setAccount(accounts[0]);\n      fetchBalances(accounts[0], web3Provider);\n    } catch (error) {\n      console.error(\"Error connecting wallet\", error);\n      alert(\"Failed to connect MetaMask.\");\n    }\n  };\n  const fetchBalances = async (userAddress, web3Provider) => {\n    try {\n      if (!web3Provider) throw new Error(\"Web3 Provider not initialized\");\n      const signer = web3Provider.getSigner();\n      const usdtContract = new ethers.Contract(USDT_BEP20_ADDRESS, ABI, signer);\n      const usdcContract = new ethers.Contract(USDC_BEP20_ADDRESS, ABI, signer);\n      const usdtBal = await usdtContract.balanceOf(userAddress);\n      const usdcBal = await usdcContract.balanceOf(userAddress);\n      setUsdtBalance(ethers.utils.formatUnits(usdtBal, 18));\n      setUsdcBalance(ethers.utils.formatUnits(usdcBal, 18));\n    } catch (error) {\n      console.error(\"Error fetching balances\", error);\n    }\n  };\n  const sendPayment = async (tokenAddress, amount) => {\n    if (!account) {\n      alert(\"Connect Wallet First!\");\n      return;\n    }\n    if (!provider) {\n      alert(\"Provider is not initialized\");\n      return;\n    }\n    try {\n      setLoading(true);\n      const signer = provider.getSigner();\n      const tokenContract = new ethers.Contract(tokenAddress, ABI, signer);\n      const amountInWei = ethers.utils.parseUnits(amount, 18);\n      const tx = await tokenContract.transfer(PAYMENT_RECEIVER, amountInWei);\n      await tx.wait();\n      alert(\"Payment Successful!\");\n      fetchBalances(account, provider);\n    } catch (error) {\n      console.error(\"Payment failed\", error);\n      alert(\"Payment Failed!\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"BSC USDT/USDC Payment Gateway\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), account ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 p-2 text-white\",\n      onClick: connectWallet,\n      children: \"Connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"USDT Balance: \", usdtBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"USDC Balance: \", usdcBalance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-green-500 p-2 text-white mt-3\",\n      onClick: () => sendPayment(USDT_BEP20_ADDRESS, \"1.0\"),\n      disabled: loading,\n      children: loading ? \"Processing...\" : \"Pay 1 USDT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-green-500 p-2 text-white mt-3 ml-2\",\n      onClick: () => sendPayment(USDC_BEP20_ADDRESS, \"1.0\"),\n      disabled: loading,\n      children: loading ? \"Processing...\" : \"Pay 1 USDC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n}\n_s(PaymentGateway, \"0vYiOhdzOdWc++KfRNhab0agTO0=\");\n_c = PaymentGateway;\nvar _c;\n$RefreshReg$(_c, \"PaymentGateway\");","map":{"version":3,"names":["useState","useEffect","ethers","jsxDEV","_jsxDEV","USDT_BEP20_ADDRESS","USDC_BEP20_ADDRESS","PAYMENT_RECEIVER","ABI","PaymentGateway","_s","account","setAccount","usdtBalance","setUsdtBalance","usdcBalance","setUsdcBalance","provider","setProvider","loading","setLoading","window","ethereum","web3Provider","providers","Web3Provider","error","console","warn","connectWallet","alert","accounts","send","length","Error","fetchBalances","userAddress","signer","getSigner","usdtContract","Contract","usdcContract","usdtBal","balanceOf","usdcBal","utils","formatUnits","sendPayment","tokenAddress","amount","tokenContract","amountInWei","parseUnits","tx","transfer","wait","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/udit/bsc-payment-gateway/src/components/PaymentGateway.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\n\r\nconst USDT_BEP20_ADDRESS = \"0x55d398326f99059fF775485246999027B3197955\"; // USDT on BSC\r\nconst USDC_BEP20_ADDRESS = \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\"; // USDC on BSC\r\nconst PAYMENT_RECEIVER = \"0x09A0C44E5f206b3220C70b4b0236fBC5e01f2AA1\"; // Replace with your wallet\r\n\r\nconst ABI = [\r\n\t\"function balanceOf(address owner) view returns (uint256)\",\r\n\t\"function transfer(address to, uint amount) returns (bool)\",\r\n\t\"function approve(address spender, uint256 amount) returns (bool)\",\r\n];\r\n\r\nexport default function PaymentGateway() {\r\n\tconst [account, setAccount] = useState(null);\r\n\tconst [usdtBalance, setUsdtBalance] = useState(\"0\");\r\n\tconst [usdcBalance, setUsdcBalance] = useState(\"0\");\r\n\tconst [provider, setProvider] = useState(null);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (typeof window !== \"undefined\" && window.ethereum) {\r\n\t\t\ttry {\r\n\t\t\t\tconst web3Provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\t\t\t\tsetProvider(web3Provider);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error(\"Failed to initialize provider\", error);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.warn(\"MetaMask is not installed\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst connectWallet = async () => {\r\n\t\tif (!window.ethereum) {\r\n\t\t\talert(\"MetaMask not detected! Please install MetaMask.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst web3Provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\t\t\tsetProvider(web3Provider);\r\n\t\t\tconst accounts = await web3Provider.send(\"eth_requestAccounts\", []);\r\n\t\t\tif (!accounts.length) throw new Error(\"No accounts found\");\r\n\t\t\tsetAccount(accounts[0]);\r\n\t\t\tfetchBalances(accounts[0], web3Provider);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error connecting wallet\", error);\r\n\t\t\talert(\"Failed to connect MetaMask.\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchBalances = async (userAddress, web3Provider) => {\r\n\t\ttry {\r\n\t\t\tif (!web3Provider) throw new Error(\"Web3 Provider not initialized\");\r\n\t\t\tconst signer = web3Provider.getSigner();\r\n\t\t\tconst usdtContract = new ethers.Contract(USDT_BEP20_ADDRESS, ABI, signer);\r\n\t\t\tconst usdcContract = new ethers.Contract(USDC_BEP20_ADDRESS, ABI, signer);\r\n\r\n\t\t\tconst usdtBal = await usdtContract.balanceOf(userAddress);\r\n\t\t\tconst usdcBal = await usdcContract.balanceOf(userAddress);\r\n\r\n\t\t\tsetUsdtBalance(ethers.utils.formatUnits(usdtBal, 18));\r\n\t\t\tsetUsdcBalance(ethers.utils.formatUnits(usdcBal, 18));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error fetching balances\", error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst sendPayment = async (tokenAddress, amount) => {\r\n\t\tif (!account) {\r\n\t\t\talert(\"Connect Wallet First!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!provider) {\r\n\t\t\talert(\"Provider is not initialized\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst signer = provider.getSigner();\r\n\t\t\tconst tokenContract = new ethers.Contract(tokenAddress, ABI, signer);\r\n\t\t\tconst amountInWei = ethers.utils.parseUnits(amount, 18);\r\n\r\n\t\t\tconst tx = await tokenContract.transfer(PAYMENT_RECEIVER, amountInWei);\r\n\t\t\tawait tx.wait();\r\n\r\n\t\t\talert(\"Payment Successful!\");\r\n\t\t\tfetchBalances(account, provider);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Payment failed\", error);\r\n\t\t\talert(\"Payment Failed!\");\r\n\t\t} finally {\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"p-5 text-center\">\r\n\t\t\t<h1 className=\"text-2xl font-bold\">BSC USDT/USDC Payment Gateway</h1>\r\n\t\t\t{account ? (\r\n\t\t\t\t<p>Connected: {account}</p>\r\n\t\t\t) : (\r\n\t\t\t\t<button className=\"bg-blue-500 p-2 text-white\" onClick={connectWallet}>\r\n\t\t\t\t\tConnect MetaMask\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t<p>USDT Balance: {usdtBalance}</p>\r\n\t\t\t\t<p>USDC Balance: {usdcBalance}</p>\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"bg-green-500 p-2 text-white mt-3\"\r\n\t\t\t\tonClick={() => sendPayment(USDT_BEP20_ADDRESS, \"1.0\")}\r\n\t\t\t\tdisabled={loading}\r\n\t\t\t>\r\n\t\t\t\t{loading ? \"Processing...\" : \"Pay 1 USDT\"}\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"bg-green-500 p-2 text-white mt-3 ml-2\"\r\n\t\t\t\tonClick={() => sendPayment(USDC_BEP20_ADDRESS, \"1.0\")}\r\n\t\t\t\tdisabled={loading}\r\n\t\t\t>\r\n\t\t\t\t{loading ? \"Processing...\" : \"Pay 1 USDC\"}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,kBAAkB,GAAG,4CAA4C,CAAC,CAAC;AACzE,MAAMC,kBAAkB,GAAG,4CAA4C,CAAC,CAAC;AACzE,MAAMC,gBAAgB,GAAG,4CAA4C,CAAC,CAAC;;AAEvE,MAAMC,GAAG,GAAG,CACX,0DAA0D,EAC1D,2DAA2D,EAC3D,kEAAkE,CAClE;AAED,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,GAAG,CAAC;EACnD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,GAAG,CAAC;EACnD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACf,IAAI,OAAOoB,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,QAAQ,EAAE;MACrD,IAAI;QACH,MAAMC,YAAY,GAAG,IAAIrB,MAAM,CAACsB,SAAS,CAACC,YAAY,CAACJ,MAAM,CAACC,QAAQ,CAAC;QACvEJ,WAAW,CAACK,YAAY,CAAC;MAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACtD;IACD,CAAC,MAAM;MACNC,OAAO,CAACC,IAAI,CAAC,2BAA2B,CAAC;IAC1C;EACD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACR,MAAM,CAACC,QAAQ,EAAE;MACrBQ,KAAK,CAAC,iDAAiD,CAAC;MACxD;IACD;IACA,IAAI;MACH,MAAMP,YAAY,GAAG,IAAIrB,MAAM,CAACsB,SAAS,CAACC,YAAY,CAACJ,MAAM,CAACC,QAAQ,CAAC;MACvEJ,WAAW,CAACK,YAAY,CAAC;MACzB,MAAMQ,QAAQ,GAAG,MAAMR,YAAY,CAACS,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MACnE,IAAI,CAACD,QAAQ,CAACE,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;MAC1DtB,UAAU,CAACmB,QAAQ,CAAC,CAAC,CAAC,CAAC;MACvBI,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC,EAAER,YAAY,CAAC;IACzC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACfC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CI,KAAK,CAAC,6BAA6B,CAAC;IACrC;EACD,CAAC;EAED,MAAMK,aAAa,GAAG,MAAAA,CAAOC,WAAW,EAAEb,YAAY,KAAK;IAC1D,IAAI;MACH,IAAI,CAACA,YAAY,EAAE,MAAM,IAAIW,KAAK,CAAC,+BAA+B,CAAC;MACnE,MAAMG,MAAM,GAAGd,YAAY,CAACe,SAAS,CAAC,CAAC;MACvC,MAAMC,YAAY,GAAG,IAAIrC,MAAM,CAACsC,QAAQ,CAACnC,kBAAkB,EAAEG,GAAG,EAAE6B,MAAM,CAAC;MACzE,MAAMI,YAAY,GAAG,IAAIvC,MAAM,CAACsC,QAAQ,CAAClC,kBAAkB,EAAEE,GAAG,EAAE6B,MAAM,CAAC;MAEzE,MAAMK,OAAO,GAAG,MAAMH,YAAY,CAACI,SAAS,CAACP,WAAW,CAAC;MACzD,MAAMQ,OAAO,GAAG,MAAMH,YAAY,CAACE,SAAS,CAACP,WAAW,CAAC;MAEzDtB,cAAc,CAACZ,MAAM,CAAC2C,KAAK,CAACC,WAAW,CAACJ,OAAO,EAAE,EAAE,CAAC,CAAC;MACrD1B,cAAc,CAACd,MAAM,CAAC2C,KAAK,CAACC,WAAW,CAACF,OAAO,EAAE,EAAE,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACfC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAChD;EACD,CAAC;EAED,MAAMqB,WAAW,GAAG,MAAAA,CAAOC,YAAY,EAAEC,MAAM,KAAK;IACnD,IAAI,CAACtC,OAAO,EAAE;MACbmB,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACD;IACA,IAAI,CAACb,QAAQ,EAAE;MACda,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACD;IAEA,IAAI;MACHV,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMiB,MAAM,GAAGpB,QAAQ,CAACqB,SAAS,CAAC,CAAC;MACnC,MAAMY,aAAa,GAAG,IAAIhD,MAAM,CAACsC,QAAQ,CAACQ,YAAY,EAAExC,GAAG,EAAE6B,MAAM,CAAC;MACpE,MAAMc,WAAW,GAAGjD,MAAM,CAAC2C,KAAK,CAACO,UAAU,CAACH,MAAM,EAAE,EAAE,CAAC;MAEvD,MAAMI,EAAE,GAAG,MAAMH,aAAa,CAACI,QAAQ,CAAC/C,gBAAgB,EAAE4C,WAAW,CAAC;MACtE,MAAME,EAAE,CAACE,IAAI,CAAC,CAAC;MAEfzB,KAAK,CAAC,qBAAqB,CAAC;MAC5BK,aAAa,CAACxB,OAAO,EAAEM,QAAQ,CAAC;IACjC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACfC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCI,KAAK,CAAC,iBAAiB,CAAC;IACzB,CAAC,SAAS;MACTV,UAAU,CAAC,KAAK,CAAC;IAClB;EACD,CAAC;EAED,oBACChB,OAAA;IAAKoD,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC/BrD,OAAA;MAAIoD,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpElD,OAAO,gBACPP,OAAA;MAAAqD,QAAA,GAAG,aAAW,EAAC9C,OAAO;IAAA;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAE3BzD,OAAA;MAAQoD,SAAS,EAAC,4BAA4B;MAACM,OAAO,EAAEjC,aAAc;MAAA4B,QAAA,EAAC;IAEvE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACR,eACDzD,OAAA;MAAKoD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACpBrD,OAAA;QAAAqD,QAAA,GAAG,gBAAc,EAAC5C,WAAW;MAAA;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCzD,OAAA;QAAAqD,QAAA,GAAG,gBAAc,EAAC1C,WAAW;MAAA;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACNzD,OAAA;MACCoD,SAAS,EAAC,kCAAkC;MAC5CM,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAAC1C,kBAAkB,EAAE,KAAK,CAAE;MACtD0D,QAAQ,EAAE5C,OAAQ;MAAAsC,QAAA,EAEjBtC,OAAO,GAAG,eAAe,GAAG;IAAY;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACTzD,OAAA;MACCoD,SAAS,EAAC,uCAAuC;MACjDM,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAACzC,kBAAkB,EAAE,KAAK,CAAE;MACtDyD,QAAQ,EAAE5C,OAAQ;MAAAsC,QAAA,EAEjBtC,OAAO,GAAG,eAAe,GAAG;IAAY;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER;AAACnD,EAAA,CAlHuBD,cAAc;AAAAuD,EAAA,GAAdvD,cAAc;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}